<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>DriveBidRent - Auction Manager Profile</title>
<style>
@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap");
* { margin: 0; padding: 0; box-sizing: border-box; font-family: "Montserrat", sans-serif; }
body { background-color: #f8f9fa; color: #333333; }

.profile-settings { padding: 4rem 2rem; max-width: 1200px; margin: 0 auto; }
.profile-settings h2 { color: #ff6b00; font-size: 2.2rem; text-align: center; margin-bottom: 2rem; font-weight: 700; }
.profile-container { display: flex; gap: 2rem; flex-wrap: wrap; }
.profile-details, .change-password { flex: 1; min-width: 300px; background-color: #ffffff; padding: 2rem; border-radius: 1rem; border: 1px solid #ff6b00; box-shadow: 0 5px 15px rgba(255, 107, 0, 0.1); }
.profile-details h3, .change-password h3 { color: #ff6b00; font-size: 1.5rem; margin-bottom: 1.5rem; border-bottom: 2px solid #ff6b00; padding-bottom: 0.5rem; }
.profile-details label, .change-password label { display: block; margin-bottom: 0.5rem; font-weight: 600; color: #333; }
.profile-details-item { margin-bottom: 1rem; font-size: 1.05rem; }
.profile-details-item strong { display: inline-block; width: 160px; font-weight: 600; color: #555; }
.read-only { padding: 0.75rem 0.5rem; border: 1px solid #eee; border-radius: 0.5rem; background-color: #f4f4f4; margin-bottom: 1rem; color: #666; }
.profile-details input[type="tel"], .change-password input { width: 100%; padding: 0.75rem; margin-bottom: 1rem; border: 1px solid #ccc; border-radius: 0.5rem; font-size: 1rem; }
.change-password small { display: block; margin-top: -0.8rem; margin-bottom: 1rem; color: #666; font-size: 0.85rem; }
.change-btn { display: block; width: 100%; background: linear-gradient(135deg, #ff6b00, #ff9a44); color: white; padding: 0.75rem 2rem; border: none; border-radius: 0.5rem; font-size: 1rem; cursor: pointer; font-weight: 600; transition: opacity 0.3s ease, transform 0.3s ease; }
.change-btn:hover { opacity: 0.9; transform: translateY(-2px); }
.update-btn-container { margin-top: 1.5rem; }
.alert { padding: 1rem; border-radius: 0.5rem; margin-bottom: 1rem; text-align: center; font-weight: 500; display: none; }
.alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
.alert-danger { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
@media (max-width: 768px) { .profile-container { flex-direction: column; } }
</style>
</head>
<body>
<%- include('./partials/navbar') %>

<section class="profile-settings">
    <h2>Auction Manager Profile</h2>

    <div id="success-alert" class="alert alert-success"></div>
    <div id="error-alert" class="alert alert-danger"></div>

    <div class="profile-container">
        <div class="profile-details">
            <h3>Personal Details</h3>
            <form id="details-form">
                <div class="profile-details-item">
                    <strong>Full Name:</strong>
                    <span><%= user.firstName %> <%= user.lastName %></span>
                </div>
                <div class="profile-details-item">
                    <strong>Email:</strong>
                    <div class="read-only"><%= user.email %></div>
                </div>
                <div class="profile-details-item">
                    <strong>Role:</strong>
                    <div class="read-only"><%= user.userType.replace(/_/g, ' ').toUpperCase() %></div>
                </div>

                <label for="phone">Phone Number:</label>
                <input type="tel" id="phone" name="phone" value="<%= user.phone || '' %>" pattern="[0-9]{10}" maxlength="10" required>
                
                <div class="update-btn-container">
                    <button type="submit" class="change-btn">Update Phone</button>
                </div>
            </form>
        </div>

        <div class="change-password">
            <h3>Change Password</h3>
            <form id="password-form">
                <label for="old-password">Current Password:</label>
                <input type="password" id="old-password" name="oldPassword" required>

                <label for="new-password">New Password:</label>
                <input type="password" id="new-password" name="newPassword" required>
                <small id="password-strength">Password must be at least 8 characters, include uppercase, number, special char</small>

                <label for="confirm-password">Confirm New Password:</label>
                <input type="password" id="confirm-password" name="confirmPassword" required>
                <small id="confirm-message"></small>

                <button type="submit" class="change-btn">Change Password</button>
            </form>
        </div>
    </div>
</section>

<%- include('./partials/footer') %>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const detailsForm = document.getElementById('details-form');
    const passwordForm = document.getElementById('password-form');
    const successAlert = document.getElementById('success-alert');
    const errorAlert = document.getElementById('error-alert');
    const newPasswordInput = document.getElementById('new-password');
    const confirmPasswordInput = document.getElementById('confirm-password');
    const passwordStrengthMsg = document.getElementById('password-strength');
    const confirmMsg = document.getElementById('confirm-message');

    function showAlert(element, message) {
        successAlert.style.display = 'none';
        errorAlert.style.display = 'none';
        element.textContent = message;
        element.style.display = 'block';
        setTimeout(() => { element.style.display = 'none'; }, 5000);
    }

    detailsForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const phone = document.getElementById('phone').value;
        if (!/^\d{10}$/.test(phone)) {
            showAlert(errorAlert, 'Phone number must be exactly 10 digits.');
            return;
        }
        try {
            const response = await fetch('/auctionmanager/update-details', { 
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ phone })
            });
            const result = await response.json();
            if (response.ok && result.success) {
                showAlert(successAlert, 'Phone number updated successfully!');
            } else {
                showAlert(errorAlert, result.message || 'Failed to update phone number.');
            }
        } catch (error) {
            showAlert(errorAlert, 'An unexpected error occurred. Please try again later.');
            console.error('Details update error:', error);
        }
    });

    // Real-time password validation
    newPasswordInput.addEventListener('input', function() {
        const strongRegex = /^(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&]).{8,}$/;
        if (!this.value) {
            passwordStrengthMsg.textContent = 'Password must be at least 8 characters, include uppercase, number, special char';
            passwordStrengthMsg.style.color = '#666';
        } else if (!strongRegex.test(this.value)) {
            passwordStrengthMsg.textContent = '❌ Weak password: must include uppercase, number, special char';
            passwordStrengthMsg.style.color = 'red';
        } else {
            passwordStrengthMsg.textContent = '✅ Strong password';
            passwordStrengthMsg.style.color = 'green';
        }
    });

    confirmPasswordInput.addEventListener('input', function() {
        if (!this.value) {
            confirmMsg.textContent = '';
        } else if (newPasswordInput.value !== this.value) {
            confirmMsg.textContent = '❌ Passwords do not match';
            confirmMsg.style.color = 'red';
        } else {
            confirmMsg.textContent = '✅ Passwords match';
            confirmMsg.style.color = 'green';
        }
    });

    passwordForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        const oldPassword = document.getElementById('old-password').value;
        const newPassword = newPasswordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        if (newPassword !== confirmPassword) {
            showAlert(errorAlert, 'New passwords do not match.');
            return;
        }
        if (newPassword.length < 8) {
            showAlert(errorAlert, 'Password must be at least 8 characters long.');
            return;
        }

        try {
            const response = await fetch('/auctionmanager/change-password', { 
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ oldPassword, newPassword })
            });
            const result = await response.json();
            if (response.ok && result.success) {
                showAlert(successAlert, 'Password updated successfully!');
                passwordForm.reset();
                passwordStrengthMsg.textContent = 'Password must be at least 8 characters, include uppercase, number, special char';
                passwordStrengthMsg.style.color = '#666';
                confirmMsg.textContent = '';
            } else {
                showAlert(errorAlert, result.message || 'Failed to update password. Please check your current password.');
            }
        } catch (error) {
            showAlert(errorAlert, 'An unexpected error occurred. Please try again later.');
            console.error('Password change error:', error);
        }
    });
});
</script>
</body>
</html>
