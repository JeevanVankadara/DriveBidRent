<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= vehicleName %> - DriveBidRent</title>
    <style>
        /* Your existing styles remain the same */
        .rental-detail {
            max-width: 800px;
            margin: 2rem auto;
            padding: 2rem;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        .rental-image {
            width: 100%;
            height: 400px;
            object-fit: cover;
            border-radius: 8px;
            margin-bottom: 1.5rem;
        }
        .seller-info {
            background: #f9f9f9;
            padding: 1.5rem;
            border-radius: 8px;
            margin: 1.5rem 0;
        }
        
        /* Fixed button styles */
        .action-buttons {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        .contact-btn, .rent-btn {
            flex: 1; /* Make buttons equal width */
            display: flex;
            align-items: center;
            justify-content: center;
            height: 50px;
            padding: 0 1.5rem;
            border-radius: 6px;
            text-decoration: none;
            font-weight: 500;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s ease;
            border: none;
            line-height: 1;
        }

        .contact-btn {
            background-color: #333;
            color: white;
        }

        .contact-btn:hover {
            background-color: #222;
        }

        .rent-btn {
            background-color: #ff6b00;
            color: white;
        }

        .rent-btn:hover {
            background-color: #e65c00;
        }

        .specs-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
            margin: 1.5rem 0;
        }
        .spec-item {
            background: #f5f5f5;
            padding: 1rem;
            border-radius: 0.3rem;
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>

    <div class="rental-detail">
        <h1><%= vehicleName %></h1>
        <img src="<%= vehicleImage %>" alt="<%= vehicleName %>" class="rental-image">
        
        <div class="specs-grid">
            <div class="spec-item">
                <h3>Vehicle Specifications</h3>
                <p><strong>Year:</strong> <%= year %></p>
                <p><strong>Condition:</strong> <%= condition.charAt(0).toUpperCase() + condition.slice(1) %></p>
                <p><strong>Capacity:</strong> <%= capacity %> passengers</p>
            </div>
            <div class="spec-item">
                <h3>Technical Details</h3>
                <p><strong>Fuel Type:</strong> <%= fuelType.charAt(0).toUpperCase() + fuelType.slice(1) %></p>
                <p><strong>Transmission:</strong> <%= transmission.charAt(0).toUpperCase() + transmission.slice(1) %></p>
                <p><strong>AC:</strong> <%= AC === 'available' ? 'Yes' : 'No' %></p>
            </div>
        </div>
        
        <div class="spec-item">
            <h3>Pricing</h3>
            <p><strong>Cost per day:</strong> ₹<%= costPerDay %></p>
            <% if (driverAvailable) { %>
                <p><strong>Driver Available:</strong> Yes (₹<%= driverRate %>/day)</p>
            <% } else { %>
                <p><strong>Driver Available:</strong> No</p>
            <% } %>
        </div>
        
        <div class="seller-info">
            <h2>Seller Information</h2>
            <p><strong>Name:</strong> <%= seller.firstName %> <%= seller.lastName %></p>
            <p><strong>Email:</strong> <%= seller.email %></p>
            <% if (seller.phone) { %>
                <p><strong>Phone:</strong> <%= seller.phone %></p>
            <% } %>
            <% if (seller.city) { %>
                <p><strong>City:</strong> <%= seller.city %></p>
            <% } %>
            <% if (seller.state) { %>
                <p><strong>State:</strong> <%= seller.state %></p>
            <% } %>
        </div>
        
        <!-- Fixed button section -->
        <div class="action-buttons">
            <a href="mailto:<%= seller.email %>" class="contact-btn">Contact Seller</a>
            <button class="rent-btn" onclick="openDatePopup()">Rent Now</button>
        </div>
    </div>

    <%- include('popups/datePopup') %>
    <%- include('popups/paymentPopup') %>
    <%- include('popups/processingPopup') %>
    <%- include('popups/successPopup') %>

    <%- include('partials/footer') %>

    <script>
        const costPerDay = <%= costPerDay %>;
        const rentalCarId = '<%= rentalId %>';
        const buyerId = '<%= user._id %>';
        const sellerId = '<%= seller._id %>';
        <% if (driverAvailable) { %>
        const driverRate = <%= driverRate %>;
        const driverAvailable = true;
        <% } else { %>
        const driverAvailable = false;
        const driverRate = 0;
        <% } %>

        let selectedPaymentMethod = 'upi';
        let currentTotalCost = 0;

        function openDatePopup() {
            document.getElementById('datePopup').style.display = 'flex';
            
            const today = new Date();
            const maxPickupDate = new Date();
            maxPickupDate.setDate(today.getDate() + 3);
            
            const pickupInput = document.getElementById('pickupDate');
            pickupInput.min = formatDate(today);
            pickupInput.max = formatDate(maxPickupDate);
            
            const dropDateInput = document.getElementById('dropDate');
            const minDropDate = new Date(today);
            minDropDate.setDate(today.getDate() + 1);
            dropDateInput.min = formatDate(minDropDate);
            
            calculateCost();
        }

        function closeDatePopup() {
            document.getElementById('datePopup').style.display = 'none';
        }

        function closePaymentPopup() {
            document.getElementById('paymentPopup').style.display = 'none';
        }

        function closeSuccessPopup() {
            document.getElementById('successPopup').style.display = 'none';
        }

        function formatDate(date) {
            const year = date.getFullYear();
            const month = String(date.getMonth() + 1).padStart(2, '0');
            const day = String(date.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        }

        function validatePickupDate() {
            const pickupDateInput = document.getElementById('pickupDate');
            const pickupDateError = document.getElementById('pickupDateError');
            
            const today = new Date();
            const maxPickupDate = new Date();
            maxPickupDate.setDate(today.getDate() + 3);
            
            const selectedPickupDate = new Date(pickupDateInput.value);
            
            if (selectedPickupDate < today || selectedPickupDate > maxPickupDate) {
                pickupDateError.textContent = 'Pickup date must be within 3 days from today.';
                pickupDateError.style.display = 'block';
                pickupDateInput.value = '';
            } else {
                pickupDateError.style.display = 'none';
                const dropDateInput = document.getElementById('dropDate');
                const minDropDate = new Date(selectedPickupDate);
                minDropDate.setDate(selectedPickupDate.getDate() + 1);
                dropDateInput.min = formatDate(minDropDate);
                if (dropDateInput.value && new Date(dropDateInput.value) <= selectedPickupDate) {
                    dropDateInput.value = '';
                }
            }
        }

        function validateDropDate() {
            const pickupDateInput = document.getElementById('pickupDate');
            const dropDateInput = document.getElementById('dropDate');
            const dropDateError = document.getElementById('dropDateError');
            
            if (!pickupDateInput.value) {
                dropDateError.textContent = 'Please select a pickup date first.';
                dropDateError.style.display = 'block';
                dropDateInput.value = '';
                return;
            }
            
            const pickupDate = new Date(pickupDateInput.value);
            const dropDate = new Date(dropDateInput.value);
            
            if (dropDate <= pickupDate) {
                dropDateError.textContent = 'Drop date must be after pickup date.';
                dropDateError.style.display = 'block';
                const minDropDate = new Date(pickupDate);
                minDropDate.setDate(pickupDate.getDate() + 1);
                dropDateInput.value = formatDate(minDropDate);
            } else {
                dropDateError.style.display = 'none';
            }
        }

        function calculateCost() {
            const pickupDate = new Date(document.getElementById('pickupDate').value);
            const dropDate = new Date(document.getElementById('dropDate').value);
            const includeDriver = driverAvailable && document.getElementById('includeDriver')?.checked;

            if (pickupDate && dropDate && dropDate > pickupDate) {
                const timeDiff = dropDate - pickupDate;
                const days = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));
                const vehicleCost = days * costPerDay;
                const driverCost = includeDriver ? days * driverRate : 0;
                currentTotalCost = vehicleCost + driverCost;
                
                document.getElementById('totalCost').textContent = `Total Cost: ₹${currentTotalCost}`;
                
                const costBreakdownEl = document.getElementById('costBreakdown');
                if (includeDriver) {
                    costBreakdownEl.innerHTML = `
                        Vehicle: ₹${vehicleCost} (₹${costPerDay} × ${days} days)<br>
                        Driver: ₹${driverCost} (₹${driverRate} × ${days} days)
                    `;
                } else {
                    costBreakdownEl.innerHTML = `Vehicle: ₹${vehicleCost} (₹${costPerDay} × ${days} days)`;
                }
            } else {
                document.getElementById('totalCost').textContent = 'Total Cost: ₹0';
                document.getElementById('costBreakdown').innerHTML = '';
                currentTotalCost = 0;
            }
        }

        function proceedToPayment() {
            const pickupDate = document.getElementById('pickupDate').value;
            const dropDate = document.getElementById('dropDate').value;

            if (!pickupDate || !dropDate) {
                alert('Please select both pickup and drop dates.');
                return;
            }

            const today = new Date();
            const maxPickupDate = new Date();
            maxPickupDate.setDate(today.getDate() + 3);
            
            const selectedPickupDate = new Date(pickupDate);
            const selectedDropDate = new Date(dropDate);
            
            if (selectedPickupDate < today || selectedPickupDate > maxPickupDate) {
                alert('Pickup date must be within 3 days from today.');
                return;
            }
            
            if (selectedDropDate <= selectedPickupDate) {
                alert('Drop date must be after pickup date.');
                return;
            }

            if (currentTotalCost <= 0) {
                alert('Please select valid dates to calculate the cost.');
                return;
            }

            document.getElementById('paymentAmount').textContent = `₹${currentTotalCost}`;
            closeDatePopup();
            document.getElementById('paymentPopup').style.display = 'flex';
        }

        function selectPaymentMethod(method) {
            selectedPaymentMethod = method;
            
            document.querySelectorAll('.payment-option').forEach(el => {
                el.classList.remove('selected');
            });
            event.currentTarget.classList.add('selected');
        }

        async function processPayment() {
            closePaymentPopup();
            document.getElementById('processingPopup').style.display = 'flex';

            setTimeout(async () => {
                const pickupDate = document.getElementById('pickupDate').value;
                const dropDate = document.getElementById('dropDate').value;
                const includeDriver = driverAvailable && document.getElementById('includeDriver')?.checked;

                const rentalData = {
                    rentalCarId,
                    buyerId,
                    sellerId,
                    pickupDate,
                    dropDate,
                    totalCost: currentTotalCost,
                    includeDriver
                };

                try {
                    const response = await fetch('/rental', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(rentalData)
                    });

                    const data = await response.json();

                    if (data.success) {
                        document.getElementById('processingPopup').style.display = 'none';
                        document.getElementById('successPopup').style.display = 'flex';
                    } else {
                        alert('Error saving rental details: ' + (data.error || 'Unknown error'));
                        document.getElementById('processingPopup').style.display = 'none';
                    }
                } catch (err) {
                    console.error('Fetch error:', err);
                    alert('Error saving rental details: ' + err.message);
                    document.getElementById('processingPopup').style.display = 'none';
                }
            }, 2000);
        }

        function redirectToDashboard() {
            window.location.href = '/buyer_dashboard?page=dashboard';
        }
    </script>
</body>
</html>