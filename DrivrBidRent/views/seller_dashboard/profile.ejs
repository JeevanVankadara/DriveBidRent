<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Seller Profile - DriveBidRent</title>
    <style>
      /* Seller Profile Page Styles */
      @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap');

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Montserrat", sans-serif;
      }

      body {
        background-color: #ffffff;
        color: #333333;
      }

      .seller-profile-content {
        padding: 4rem 2rem;
        max-width: 1200px;
        margin: 0 auto;
      }

      .seller-profile-content h1 {
        color: #ff6b00;
        font-size: 2.5rem;
        margin-bottom: 2rem;
      }

      .profile-container {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
      }

      .seller-info, .listings-overview, .earnings-summary, .preferences {
        background-color: #ffffff;
        padding: 1.5rem;
        border-radius: 1rem;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      }

      .seller-info h2, .listings-overview h2, .earnings-summary h2, .preferences h2 {
        color: #ff6b00;
        margin-bottom: 1.5rem;
      }

      form label {
        display: block;
        margin-bottom: 0.5rem;
        color: #333333;
      }

      form input, form select, form textarea {
        width: 100%;
        padding: 0.5rem;
        margin-bottom: 1rem;
        border: 1px solid #ccc;
        border-radius: 0.3rem;
      }

      form input:read-only {
        background-color: #f9f9f9;
        color: #666666;
        cursor: not-allowed;
      }

      .save-btn {
        background: linear-gradient(135deg, #ff6b00, #ff9a44);
        color: white;
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 0.3rem;
        cursor: pointer;
        transition: background 0.3s ease;
      }

      .save-btn:hover {
        background: linear-gradient(135deg, #ff9a44, #ff6b00);
      }

      .listings-summary {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
      }

      .summary-card {
        background-color: #f9f9f9;
        padding: 1rem;
        border-radius: 0.5rem;
        text-align: center;
      }

      .summary-card h3 {
        color: #ff6b00;
        margin-bottom: 0.5rem;
      }

      .summary-card p {
        margin-bottom: 1rem;
        color: #666666;
      }

      .details-btn {
        display: inline-block;
        background: linear-gradient(135deg, #ff6b00, #ff9a44);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.3rem;
        text-decoration: none;
        transition: background 0.3s ease;
      }

      .details-btn:hover {
        background: linear-gradient(135deg, #ff9a44, #ff6b00);
      }

      .earnings-card {
        background-color: #f9f9f9;
        padding: 1rem;
        border-radius: 0.5rem;
      }

      .earnings-card p {
        margin-bottom: 0.5rem;
        color: #666666;
      }

      .earnings-card ul {
        list-style: none;
        margin-bottom: 1rem;
      }

      .earnings-card ul li {
        margin-bottom: 0.5rem;
        color: #333333;
      }

      /* Password Fields */
      #old-password, #new-password, #confirm-password {
        width: 100%;
        padding: 0.5rem;
        margin-bottom: 1rem;
        border: 1px solid #ccc;
        border-radius: 0.3rem;
      }

      /* Alert Messages */
      .alert {
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 15px;
      }

      .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
      }

      .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
      }

      /* Error Messages */
      .error-message {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: -0.75rem;
        margin-bottom: 0.75rem;
        display: none;
      }

      /* Address Fields Layout */
      .address-fields {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
      }

      .address-full-width {
        grid-column: 1 / -1;
      }

      /* Responsive Design */
      @media (max-width: 768px) {
        .profile-container {
          grid-template-columns: 1fr;
        }
        
        .address-fields {
          grid-template-columns: 1fr;
        }
      }
    </style>
  </head>
  <body>
    <!-- Include Navbar Partial -->
    <%- include('partials/navbar', { currentPage: 'profile' }) %>

    <!-- Seller Profile Page Content -->
    <section class="seller-profile-content">
      <h1>Seller Profile</h1>
      
      <!-- Display success/error messages if any -->
      <% if (typeof success !== 'undefined') { %>
        <div class="alert alert-success"><%= success %></div>
      <% } %>
      
      <% if (typeof error !== 'undefined') { %>
        <div class="alert alert-danger"><%= error %></div>
      <% } %>

      <div class="profile-container">
        <!-- Seller Information Section -->
        <div class="seller-info">
          <h2>Personal Information</h2>
          <div id="profileUpdateAlert" class="alert alert-success" style="display: none;"></div>
          <div id="profileUpdateError" class="alert alert-danger" style="display: none;"></div>
          <form id="seller-profile-form">
            <label for="firstName">First Name:</label>
            <input
              type="text"
              id="firstName"
              name="firstName"
              value="<%= user.firstName %>"
              required
            />
            <div id="firstName-error" class="error-message">First name is required and should be at least 2 characters.</div>

            <label for="lastName">Last Name:</label>
            <input
              type="text"
              id="lastName"
              name="lastName"
              value="<%= user.lastName %>"
              required
            />
            <!-- Removed last name validation error message -->

            <label for="email">Email:</label>
            <input
              type="email"
              id="email"
              name="email"
              value="<%= user.email %>"
              readonly
            />
            <!-- Email is now read-only, no validation needed -->

            <label for="phone">Phone Number:</label>
            <input
              type="tel"
              id="phone"
              name="phone"
              value="<%= user.phone || '' %>"
              pattern="[0-9]{10}"
              title="Please enter a valid 10-digit phone number"
              required
            />
            <div id="phone-error" class="error-message">Please enter a valid 10-digit phone number.</div>

            <h3 style="color: #ff6b00; margin: 1.5rem 0 1rem 0;">Address Information</h3>
            
            <div class="address-fields">
              <div>
                <label for="doorNo">Door/Flat No:</label>
                <input
                  type="text"
                  id="doorNo"
                  name="doorNo"
                  value="<%= user.doorNo || '' %>"
                />
              </div>
              
              <div class="address-full-width">
                <label for="street">Street/Area:</label>
                <input
                  type="text"
                  id="street"
                  name="street"
                  value="<%= user.street || '' %>"
                />
              </div>
              
              <div>
                <label for="city">City:</label>
                <input
                  type="text"
                  id="city"
                  name="city"
                  value="<%= user.city || '' %>"
                  readonly
                />
              </div>
              
              <div>
                <label for="state">State:</label>
                <input
                  type="text"
                  id="state"
                  name="state"
                  value="<%= user.state || '' %>"
                />
              </div>
            </div>

            <button type="submit" class="save-btn">Save Changes</button>
          </form>
        </div>

        <!-- Listings Overview Section -->
        <div class="listings-overview">
          <h2>Listings Overview</h2>
          <div class="listings-summary">
            <div class="summary-card">
              <h3>Active Auctions</h3>
              <p><strong>Total:</strong> <%= typeof auctionsCount !== 'undefined' ? auctionsCount : 0 %></p>
              <a href="/seller_dashboard/view-auctions" class="details-btn">View Auctions</a>
            </div>
            <div class="summary-card">
              <h3>Active Rentals</h3>
              <p><strong>Total:</strong> <%= typeof rentalsCount !== 'undefined' ? rentalsCount : 0 %></p>
              <a href="/seller_dashboard/view-rentals" class="details-btn">View Rentals</a>
            </div>
          </div>
        </div>

        <!-- Earnings Summary Section -->
        <div class="earnings-summary">
          <h2>Earnings Summary</h2>
          <div class="earnings-card">
            <p><strong>Total Earnings:</strong> ₹<%= typeof totalEarnings !== 'undefined' ? totalEarnings.toLocaleString('en-IN') : '0' %></p>
            <p><strong>Recent Transactions (Completed):</strong></p>
            <% if (typeof recentTransactions !== 'undefined' && recentTransactions.length > 0) { %>
              <ul>
                <% recentTransactions.forEach(transaction => { %>
                  <li>
                    ₹<%= transaction.amount.toLocaleString('en-IN') %> - <%= transaction.description %> 
                    ( <%= new Date(transaction.createdAt).toLocaleDateString('en-US', { 
                      day: '2-digit', 
                      month: '2-digit', 
                      year: 'numeric' 
                    }) %> )
                  </li>
                <% }); %>
              </ul>
            <% } else { %>
              <ul>
                <li>No recent completed transactions</li>
              </ul>
            <% } %>
            <a href="/seller_dashboard/view-earnings" class="details-btn">View All Earnings</a>
          </div>
        </div>

        <!-- Preferences Section -->
        <div class="preferences">
          <h2>Preferences</h2>
          <div id="preferencesUpdateAlert" class="alert alert-success" style="display: none;"></div>
          <div id="preferencesUpdateError" class="alert alert-danger" style="display: none;"></div>
          <form id="preferences-form">
            <label for="notifications">Notification Preferences:</label>
            <select id="notifications" name="notifications">
              <option value="all" <%= user.notificationPreference === 'all' ? 'selected' : '' %>>All Notifications</option>
              <option value="important" <%= user.notificationPreference === 'important' ? 'selected' : '' %>>Only Important</option>
              <option value="none" <%= user.notificationPreference === 'none' ? 'selected' : '' %>>None</option>
            </select>
            <div id="notifications-error" class="error-message">Please select a notification preference.</div>

            <h3 style="margin-top: 20px; color: #ff6b00;">Change Password</h3>
            <label for="old-password">Old Password:</label>
            <input
              type="password"
              id="old-password"
              name="oldPassword"
              placeholder="Enter Old Password"
            />
            <div id="old-password-error" class="error-message">Old password is required to change password.</div>

            <label for="new-password">New Password:</label>
            <input
              type="password"
              id="new-password"
              name="newPassword"
              placeholder="Enter New Password"
            />
            <div id="new-password-error" class="error-message">Password must be at least 8 characters, include uppercase, lowercase, numbers, and special characters (e.g., !@#$%).</div>

            <label for="confirm-password">Confirm New Password:</label>
            <input
              type="password"
              id="confirm-password"
              name="confirmPassword"
              placeholder="Confirm New Password"
            />
            <div id="confirm-password-error" class="error-message">Passwords do not match or confirmation is required.</div>

            <button type="submit" class="save-btn">Save Preferences</button>
          </form>
        </div>
      </div>
    </section>

    <%- include('partials/footer') %>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const profileForm = document.getElementById('seller-profile-form');
        const preferencesForm = document.getElementById('preferences-form');
        const saveProfileBtn = document.querySelector('#seller-profile-form .save-btn');
        const savePreferencesBtn = document.querySelector('#preferences-form .save-btn');

        // Phone number input formatting
        const phoneInput = document.getElementById('phone');
        phoneInput.addEventListener('input', () => {
          phoneInput.value = phoneInput.value.replace(/[^0-9]/g, '').slice(0, 10);
          validateProfileForm();
        });

        // Profile Form Validation
        const validateProfileForm = () => {
          let isValid = true;

          const firstName = document.getElementById('firstName').value.trim();
          const firstNameError = document.getElementById('firstName-error');
          if (firstName.length < 2) {
            firstNameError.style.display = 'block';
            isValid = false;
          } else {
            firstNameError.style.display = 'none';
          }

          // Removed last name validation

          const phone = phoneInput.value;
          const phoneError = document.getElementById('phone-error');
          if (!/^\d{10}$/.test(phone)) {
            phoneError.style.display = 'block';
            isValid = false;
          } else {
            phoneError.style.display = 'none';
          }

          saveProfileBtn.disabled = !isValid;
          return isValid;
        };

        // Real-time validation for profile form
        ['firstName', 'phone'].forEach(id => {
          document.getElementById(id).addEventListener('input', validateProfileForm);
        });

        // Profile Form Submission
        profileForm.addEventListener('submit', async (e) => {
          e.preventDefault();

          if (!validateProfileForm()) {
            document.getElementById('profileUpdateError').textContent = 'Please fix the errors in the form.';
            document.getElementById('profileUpdateError').style.display = 'block';
            document.getElementById('profileUpdateAlert').style.display = 'none';
            return;
          }

          saveProfileBtn.disabled = true;
          saveProfileBtn.textContent = 'Saving...';

          const formData = {
            firstName: document.getElementById('firstName').value,
            lastName: document.getElementById('lastName').value,
            email: document.getElementById('email').value,
            phone: document.getElementById('phone').value,
            doorNo: document.getElementById('doorNo').value,
            street: document.getElementById('street').value,
            city: document.getElementById('city').value,
            state: document.getElementById('state').value
          };

          try {
            const response = await fetch('/seller_dashboard/update-profile', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (result.success) {
              document.getElementById('profileUpdateAlert').textContent = 'Profile updated successfully!';
              document.getElementById('profileUpdateAlert').style.display = 'block';
              document.getElementById('profileUpdateError').style.display = 'none';
              setTimeout(() => location.reload(), 1500);
            } else {
              document.getElementById('profileUpdateError').textContent = 'Error: ' + result.message;
              document.getElementById('profileUpdateError').style.display = 'block';
              document.getElementById('profileUpdateAlert').style.display = 'none';
            }
          } catch (error) {
            console.error('Error updating profile:', error);
            document.getElementById('profileUpdateError').textContent = 'An error occurred while updating your profile.';
            document.getElementById('profileUpdateError').style.display = 'block';
            document.getElementById('profileUpdateAlert').style.display = 'none';
          } finally {
            saveProfileBtn.disabled = false;
            saveProfileBtn.textContent = 'Save Changes';
          }
        });

        // Preferences Form Validation
        const validatePreferencesForm = () => {
          let isValid = true;

          const notifications = document.getElementById('notifications').value;
          const notificationsError = document.getElementById('notifications-error');
          if (!notifications) {
            notificationsError.style.display = 'block';
            isValid = false;
          } else {
            notificationsError.style.display = 'none';
          }

          const oldPassword = document.getElementById('old-password').value;
          const newPassword = document.getElementById('new-password').value;
          const confirmPassword = document.getElementById('confirm-password').value;
          const oldPasswordError = document.getElementById('old-password-error');
          const newPasswordError = document.getElementById('new-password-error');
          const confirmPasswordError = document.getElementById('confirm-password-error');

          // Hard password validation regex: at least 8 characters, 1 uppercase, 1 lowercase, 1 number, 1 special character
          const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*])[A-Za-z\d!@#$%^&*]{8,}$/;

          if (oldPassword || newPassword || confirmPassword) {
            if (!oldPassword || !newPassword || !confirmPassword) {
              oldPasswordError.style.display = 'block';
              newPasswordError.style.display = 'block';
              confirmPasswordError.style.display = 'block';
              isValid = false;
            } else if (newPassword !== confirmPassword) {
              confirmPasswordError.textContent = 'Passwords do not match.';
              confirmPasswordError.style.display = 'block';
              isValid = false;
            } else if (!passwordRegex.test(newPassword)) {
              newPasswordError.textContent = 'Password must be at least 8 characters, include uppercase, lowercase, numbers, and special characters (e.g., !@#$%).';
              newPasswordError.style.display = 'block';
              isValid = false;
            } else {
              oldPasswordError.style.display = 'none';
              newPasswordError.style.display = 'none';
              confirmPasswordError.style.display = 'none';
            }
          } else {
            oldPasswordError.style.display = 'none';
            newPasswordError.style.display = 'none';
            confirmPasswordError.style.display = 'none';
          }

          savePreferencesBtn.disabled = !isValid;
          return isValid;
        };

        // Real-time validation for preferences form
        ['notifications', 'old-password', 'new-password', 'confirm-password'].forEach(id => {
          document.getElementById(id).addEventListener('input', validatePreferencesForm);
        });

        // Preferences Form Submission
        preferencesForm.addEventListener('submit', async (e) => {
          e.preventDefault();

          if (!validatePreferencesForm()) {
            document.getElementById('preferencesUpdateError').textContent = 'Please fix the errors in the form.';
            document.getElementById('preferencesUpdateError').style.display = 'block';
            document.getElementById('preferencesUpdateAlert').style.display = 'none';
            return;
          }

          savePreferencesBtn.disabled = true;
          savePreferencesBtn.textContent = 'Saving...';

          const formData = {
            notificationPreference: document.getElementById('notifications').value
          };
          const oldPassword = document.getElementById('old-password').value;
          const newPassword = document.getElementById('new-password').value;
          const confirmPassword = document.getElementById('confirm-password').value;

          try {
            let prefResponse = await fetch('/seller_dashboard/update-preferences', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(formData)
            });
            let prefResult = await prefResponse.json();

            let pwResult = { success: true };
            if (oldPassword && newPassword) {
              let pwResponse = await fetch('/seller_dashboard/change-password', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ oldPassword, newPassword, confirmPassword })
              });
              pwResult = await pwResponse.json();
            }

            if (pwResult.success && prefResult.success) {
              document.getElementById('preferencesUpdateAlert').textContent = 'Preferences and password updated successfully!';
              document.getElementById('preferencesUpdateAlert').style.display = 'block';
              document.getElementById('preferencesUpdateError').style.display = 'none';
            } else if (pwResult.success) {
              document.getElementById('preferencesUpdateAlert').textContent = 'Password updated successfully, but preferences update failed: ' + prefResult.message;
              document.getElementById('preferencesUpdateAlert').style.display = 'block';
              document.getElementById('preferencesUpdateError').style.display = 'none';
            } else if (prefResult.success) {
              document.getElementById('preferencesUpdateAlert').textContent = 'Preferences updated successfully, but password update failed: ' + pwResult.message;
              document.getElementById('preferencesUpdateAlert').style.display = 'block';
              document.getElementById('preferencesUpdateError').style.display = 'none';
            } else {
              document.getElementById('preferencesUpdateError').textContent = 'Error: ' + (pwResult.message || prefResult.message);
              document.getElementById('preferencesUpdateError').style.display = 'block';
              document.getElementById('preferencesUpdateAlert').style.display = 'none';
            }

            // Clear password fields
            document.getElementById('old-password').value = '';
            document.getElementById('new-password').value = '';
            document.getElementById('confirm-password').value = '';
          } catch (error) {
            console.error('Error updating preferences:', error);
            document.getElementById('preferencesUpdateError').textContent = 'An error occurred while updating your preferences.';
            document.getElementById('preferencesUpdateError').style.display = 'block';
            document.getElementById('preferencesUpdateAlert').style.display = 'none';
          } finally {
            savePreferencesBtn.disabled = false;
            savePreferencesBtn.textContent = 'Save Preferences';
          }
        });
      });
    </script>
  </body>
</html>